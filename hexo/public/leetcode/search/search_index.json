{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"leetcode \u5237\u9898\u96c6 \u672c\u7cfb\u5217\u662f\u57fa\u4e8e leetcode \u7684\u5237\u9898\u96c6\u9526\uff0c\u6211\u5e0c\u671b\u628a\u6bcf\u9053\u9898\u90fd\u505a\u4e00\u904d\uff0c\u5e76\u5f52\u7eb3\u6574\u7406\u51fa\u6765\u3002\u7ec3\u4e60\u7b97\u6cd5\u4e0d\u53ea\u662f\u4e3a\u4e86\u5e94\u4ed8\u9762\u8bd5\uff0c\u4ece\u4e2d\u5b66\u4e60\u5230\u7684\u5404\u79cd\u89e3\u6cd5\u4f1a\u7ed9\u5f00\u53d1\u5e26\u6765\u5f88\u5927\u7684\u5e2e\u52a9\u3002 \u6211\u4e3b\u8981\u4ee5 Python \u8bed\u8a00\u7f16\u5199\u76f8\u5173\u5185\u5bb9\uff0c\u540e\u7eed\u89c6\u60c5\u51b5\u8865\u5145 Java \u6216 Go \u8bed\u8a00\u7684\u7248\u672c\u3002 \u6211\u4f1a\u8bd5\u7740\u628a\u7b2c\u4e00\u6b21\u505a\u8fd9\u4e9b\u9898\u65f6\u7684\u601d\u8def\u5c55\u793a\u51fa\u6765\uff0c\u901a\u5e38\u4f1a\u7ecf\u5386\u51e0\u4e2a\u7248\u672c\u7684\u7b97\u6cd5\u6539\u8fdb\uff0c\u624d\u80fd\u5f97\u5230\u6bd4\u8f83\u597d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5728\u65e9\u671f\u6211\u591a\u6570\u60c5\u51b5\u6700\u5148\u60f3\u5230\u7684\u662f\u66b4\u529b\u89e3\u6cd5\uff0c\u867d\u7136\u8fd9\u6837\u7684\u89e3\u6cd5\u5728 leetcode \u4e2d\u57fa\u672c\u90fd\u4f1a\u4ee5\u8d85\u65f6\u544a\u7ec8\uff0c\u4f46\u8fd9\u662f\u6700\u5bb9\u6613\u7406\u89e3\u7684\u65b9\u5f0f\u3002\u6211\u8ba4\u4e3a\u7a0b\u5e8f\u5458\u9996\u8981\u4efb\u52a1\u662f\u5b8c\u6210\u529f\u80fd\uff0c\u5176\u6b21\u624d\u662f\u5b8c\u5584\u548c\u4f18\u5316\u3002 \u51c6\u5907\u597d\u5237\u9898\u4e86\u5417\uff0c\u6211\u4eec\u73b0\u5728\u5f00\u59cb\u5427\u3002 \u672c\u7cfb\u5217 Demo \u5e93 Python Go","title":"\u6765\u5237\u9898"},{"location":"#leetcode","text":"\u672c\u7cfb\u5217\u662f\u57fa\u4e8e leetcode \u7684\u5237\u9898\u96c6\u9526\uff0c\u6211\u5e0c\u671b\u628a\u6bcf\u9053\u9898\u90fd\u505a\u4e00\u904d\uff0c\u5e76\u5f52\u7eb3\u6574\u7406\u51fa\u6765\u3002\u7ec3\u4e60\u7b97\u6cd5\u4e0d\u53ea\u662f\u4e3a\u4e86\u5e94\u4ed8\u9762\u8bd5\uff0c\u4ece\u4e2d\u5b66\u4e60\u5230\u7684\u5404\u79cd\u89e3\u6cd5\u4f1a\u7ed9\u5f00\u53d1\u5e26\u6765\u5f88\u5927\u7684\u5e2e\u52a9\u3002 \u6211\u4e3b\u8981\u4ee5 Python \u8bed\u8a00\u7f16\u5199\u76f8\u5173\u5185\u5bb9\uff0c\u540e\u7eed\u89c6\u60c5\u51b5\u8865\u5145 Java \u6216 Go \u8bed\u8a00\u7684\u7248\u672c\u3002 \u6211\u4f1a\u8bd5\u7740\u628a\u7b2c\u4e00\u6b21\u505a\u8fd9\u4e9b\u9898\u65f6\u7684\u601d\u8def\u5c55\u793a\u51fa\u6765\uff0c\u901a\u5e38\u4f1a\u7ecf\u5386\u51e0\u4e2a\u7248\u672c\u7684\u7b97\u6cd5\u6539\u8fdb\uff0c\u624d\u80fd\u5f97\u5230\u6bd4\u8f83\u597d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5728\u65e9\u671f\u6211\u591a\u6570\u60c5\u51b5\u6700\u5148\u60f3\u5230\u7684\u662f\u66b4\u529b\u89e3\u6cd5\uff0c\u867d\u7136\u8fd9\u6837\u7684\u89e3\u6cd5\u5728 leetcode \u4e2d\u57fa\u672c\u90fd\u4f1a\u4ee5\u8d85\u65f6\u544a\u7ec8\uff0c\u4f46\u8fd9\u662f\u6700\u5bb9\u6613\u7406\u89e3\u7684\u65b9\u5f0f\u3002\u6211\u8ba4\u4e3a\u7a0b\u5e8f\u5458\u9996\u8981\u4efb\u52a1\u662f\u5b8c\u6210\u529f\u80fd\uff0c\u5176\u6b21\u624d\u662f\u5b8c\u5584\u548c\u4f18\u5316\u3002 \u51c6\u5907\u597d\u5237\u9898\u4e86\u5417\uff0c\u6211\u4eec\u73b0\u5728\u5f00\u59cb\u5427\u3002 \u672c\u7cfb\u5217 Demo \u5e93 Python Go","title":"leetcode \u5237\u9898\u96c6"},{"location":"problems/1-two-sum/","text":"\u4e24\u6570\u4e4b\u548c \u9898\u76ee\u63cf\u8ff0 \u96be\u5ea6\uff1a\u7b80\u5355 \u77e5\u8bc6\u70b9\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868 \u5730\u5740\uff1a https://leetcode-cn.com/problems/two-sum/ \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u4f60\u4e0d\u80fd\u91cd\u590d\u5229\u7528\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u540c\u6837\u7684\u5143\u7d20\u3002 \u793a\u4f8b: \u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9 \u56e0\u4e3a nums[0] + nums[1] = 2 + 7 = 9 \u6240\u4ee5\u8fd4\u56de [0, 1] \u66b4\u529b\u89e3\u6cd5 \u66b4\u529b\u89e3\u6cd5\uff0c\u5c06\u5217\u8868\u4e2d\u6240\u4ee5\u7684\u5143\u7d20\u4e24\u4e24\u76f8\u52a0\uff0c\u76f4\u5230\u627e\u5230\u548c target \u76f8\u7b49\u7684\u503c\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution(object): def twoSum(self, nums, target): for i in range(len(nums)): for j in range(1, len(nums)): k = j + i if k < len(nums): if nums[i] + nums[k] == target: return [i, k] return None \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\uff0c\u53ea\u8981\u662f\u6d89\u53ca\u5230\u4e24\u5c42\u957f\u5ea6\u4e3a n \u7684 for \u5faa\u73af\u7684\u5d4c\u5957\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u76f4\u63a5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u5224\u65ad\u4e3a O(n^2) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002 \u4e24\u904d\u54c8\u5e0c\u8868 \u66b4\u529b\u89e3\u6cd5\u7684\u5185\u5c42\u5faa\u73af\u610f\u5728\u67e5\u627e\u4e00\u4e2a\u6570\u5b57 nums[k] \u7b49\u4e8e target - nums[i] \uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2)\uff0c\u800c\u6211\u4eec\u9700\u8981\u4f18\u5316\u7684\u5c31\u662f\u5c06\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a O(1)\uff0c\u54c8\u5e0c\u8868\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u6b65\u3002 \u6211\u4eec\u5148\u5c06\u5217\u8868\u4e2d\u7684\u6570\u5b57\u548c\u7d22\u5f15\u7684\u5bf9\u5e94\u5173\u7cfb\u5b58\u5165\u5230\u54c8\u5e0c\u8868\u4e2d\uff0c\u7136\u540e\u5faa\u73af\u4e00\u904d\u5217\u8868\uff0c\u627e\u5230 target - nums[i] \u6240\u5728\u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u5728\u4e8e\u9700\u8981\u6392\u9664 nums[i] \u672c\u8eab\u7684\u4f4d\u7f6e #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution(object): def twoSum(self, nums, target): m = {} for i in range(len(nums)): m[nums[i]] = i for i in range(len(nums)): b = target - nums[i] if b in m and m[b] != i: return [i, m[b]] \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u867d\u7136\u5c06\u5217\u8868\u53d8\u91cf\u4e86\u4e24\u904d\uff0c\u53bb\u6389\u5e38\u6570\u4ecd\u7136\u4e3a O(n)\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6240\u9700\u7684\u989d\u5916\u7a7a\u95f4\u53d6\u51b3\u4e8e\u54c8\u5e0c\u8868\u4e2d\u5b58\u50a8\u7684\u5143\u7d20\u6570\u91cf\uff0c\u8be5\u8868\u4e2d\u5b58\u50a8\u4e86 n \u4e2a\u5143\u7d20\u3002 \u4e00\u904d\u54c8\u5e0c\u8868 \u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u7b97\u6cd5\u518d\u6b21\u4f18\u5316\uff0c\u4e24\u6b21\u904d\u5386\u5206\u522b\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\uff0c\u7f13\u5b58\u7d22\u5f15\u548c\u67e5\u627e\u7d22\u5f15\uff0c\u8fd9\u4e24\u4ef6\u4e8b\u60c5\u53ef\u4ee5\u653e\u5728\u4e00\u6b21\u5faa\u73af\u91cc\u8fdb\u884c\u3002 \u6700\u5f00\u59cb\u65f6 m \u4e3a\u7a7a\uff0c\u5047\u8bbe nums[i] \u548c b \u662f\u6211\u4eec\u60f3\u8981\u627e\u7684\u4e24\u4e2a\u6570\u5b57\uff0c\u5f53\u904d\u5386\u5230 nums[i] \u65f6\uff0c\u53d1\u73b0 b \u5e76\u6ca1\u6709\u5728 m \u4e2d\uff0c\u53ef\u4ee5\u5148\u5c06 nums[i] \u5b58\u5165 m \u4e2d\uff0c\u7b49\u5230\u5faa\u73af\u5230 b \u65f6\uff0c\u5c31\u53ef\u4ee5\u5728 m \u4e2d\u627e\u5230 nums[i] \u3002 \u9700\u8981\u6ce8\u610f\u7684\u65f6\uff0c\u6b64\u65f6\u6211\u4eec\u627e\u5230\u7684\u4e24\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u662f\u53cd\u7684\uff0c\u8c03\u6362\u4f4d\u7f6e\u5728\u8f93\u51fa\u5373\u53ef\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution(object): def twoSum(self, nums, target): m = {} for i in range(len(nums)): a = nums[i] b = target - a if b in m: return [m[b], i] m[a] = i \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6700\u574f\u7684\u60c5\u51b5\uff0c\u53ea\u6709\u5f53\u4e24\u4e2a\u6570\u5b57\u4e3a\u5217\u8868\u7684\u5934\u5c3e\u65f6\u624d\u4f1a\u5982\u6b64\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u50a8\u5b58 n \u4e2a\u5143\u7d20 \u5176\u4ed6\u8bed\u8a00 python","title":"1. \u4e24\u6570\u4e4b\u548c"},{"location":"problems/1-two-sum/#_1","text":"","title":"\u4e24\u6570\u4e4b\u548c"},{"location":"problems/1-two-sum/#_2","text":"\u96be\u5ea6\uff1a\u7b80\u5355 \u77e5\u8bc6\u70b9\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868 \u5730\u5740\uff1a https://leetcode-cn.com/problems/two-sum/ \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u4f60\u4e0d\u80fd\u91cd\u590d\u5229\u7528\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u540c\u6837\u7684\u5143\u7d20\u3002 \u793a\u4f8b: \u7ed9\u5b9a nums = [2, 7, 11, 15], target = 9 \u56e0\u4e3a nums[0] + nums[1] = 2 + 7 = 9 \u6240\u4ee5\u8fd4\u56de [0, 1]","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"problems/1-two-sum/#_3","text":"\u66b4\u529b\u89e3\u6cd5\uff0c\u5c06\u5217\u8868\u4e2d\u6240\u4ee5\u7684\u5143\u7d20\u4e24\u4e24\u76f8\u52a0\uff0c\u76f4\u5230\u627e\u5230\u548c target \u76f8\u7b49\u7684\u503c\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution(object): def twoSum(self, nums, target): for i in range(len(nums)): for j in range(1, len(nums)): k = j + i if k < len(nums): if nums[i] + nums[k] == target: return [i, k] return None","title":"\u66b4\u529b\u89e3\u6cd5"},{"location":"problems/1-two-sum/#_4","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\uff0c\u53ea\u8981\u662f\u6d89\u53ca\u5230\u4e24\u5c42\u957f\u5ea6\u4e3a n \u7684 for \u5faa\u73af\u7684\u5d4c\u5957\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u76f4\u63a5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u5224\u65ad\u4e3a O(n^2) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/1-two-sum/#_5","text":"\u66b4\u529b\u89e3\u6cd5\u7684\u5185\u5c42\u5faa\u73af\u610f\u5728\u67e5\u627e\u4e00\u4e2a\u6570\u5b57 nums[k] \u7b49\u4e8e target - nums[i] \uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2)\uff0c\u800c\u6211\u4eec\u9700\u8981\u4f18\u5316\u7684\u5c31\u662f\u5c06\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a O(1)\uff0c\u54c8\u5e0c\u8868\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u6b65\u3002 \u6211\u4eec\u5148\u5c06\u5217\u8868\u4e2d\u7684\u6570\u5b57\u548c\u7d22\u5f15\u7684\u5bf9\u5e94\u5173\u7cfb\u5b58\u5165\u5230\u54c8\u5e0c\u8868\u4e2d\uff0c\u7136\u540e\u5faa\u73af\u4e00\u904d\u5217\u8868\uff0c\u627e\u5230 target - nums[i] \u6240\u5728\u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u5728\u4e8e\u9700\u8981\u6392\u9664 nums[i] \u672c\u8eab\u7684\u4f4d\u7f6e #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution(object): def twoSum(self, nums, target): m = {} for i in range(len(nums)): m[nums[i]] = i for i in range(len(nums)): b = target - nums[i] if b in m and m[b] != i: return [i, m[b]]","title":"\u4e24\u904d\u54c8\u5e0c\u8868"},{"location":"problems/1-two-sum/#_6","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u867d\u7136\u5c06\u5217\u8868\u53d8\u91cf\u4e86\u4e24\u904d\uff0c\u53bb\u6389\u5e38\u6570\u4ecd\u7136\u4e3a O(n)\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6240\u9700\u7684\u989d\u5916\u7a7a\u95f4\u53d6\u51b3\u4e8e\u54c8\u5e0c\u8868\u4e2d\u5b58\u50a8\u7684\u5143\u7d20\u6570\u91cf\uff0c\u8be5\u8868\u4e2d\u5b58\u50a8\u4e86 n \u4e2a\u5143\u7d20\u3002","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/1-two-sum/#_7","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u7b97\u6cd5\u518d\u6b21\u4f18\u5316\uff0c\u4e24\u6b21\u904d\u5386\u5206\u522b\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\uff0c\u7f13\u5b58\u7d22\u5f15\u548c\u67e5\u627e\u7d22\u5f15\uff0c\u8fd9\u4e24\u4ef6\u4e8b\u60c5\u53ef\u4ee5\u653e\u5728\u4e00\u6b21\u5faa\u73af\u91cc\u8fdb\u884c\u3002 \u6700\u5f00\u59cb\u65f6 m \u4e3a\u7a7a\uff0c\u5047\u8bbe nums[i] \u548c b \u662f\u6211\u4eec\u60f3\u8981\u627e\u7684\u4e24\u4e2a\u6570\u5b57\uff0c\u5f53\u904d\u5386\u5230 nums[i] \u65f6\uff0c\u53d1\u73b0 b \u5e76\u6ca1\u6709\u5728 m \u4e2d\uff0c\u53ef\u4ee5\u5148\u5c06 nums[i] \u5b58\u5165 m \u4e2d\uff0c\u7b49\u5230\u5faa\u73af\u5230 b \u65f6\uff0c\u5c31\u53ef\u4ee5\u5728 m \u4e2d\u627e\u5230 nums[i] \u3002 \u9700\u8981\u6ce8\u610f\u7684\u65f6\uff0c\u6b64\u65f6\u6211\u4eec\u627e\u5230\u7684\u4e24\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u662f\u53cd\u7684\uff0c\u8c03\u6362\u4f4d\u7f6e\u5728\u8f93\u51fa\u5373\u53ef\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution(object): def twoSum(self, nums, target): m = {} for i in range(len(nums)): a = nums[i] b = target - a if b in m: return [m[b], i] m[a] = i","title":"\u4e00\u904d\u54c8\u5e0c\u8868"},{"location":"problems/1-two-sum/#_8","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6700\u574f\u7684\u60c5\u51b5\uff0c\u53ea\u6709\u5f53\u4e24\u4e2a\u6570\u5b57\u4e3a\u5217\u8868\u7684\u5934\u5c3e\u65f6\u624d\u4f1a\u5982\u6b64\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u50a8\u5b58 n \u4e2a\u5143\u7d20","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/1-two-sum/#_9","text":"python","title":"\u5176\u4ed6\u8bed\u8a00"},{"location":"problems/2-add-two-numbers/","text":"\u4e24\u6570\u76f8\u52a0 \u9898\u76ee\u63cf\u8ff0 \u96be\u5ea6\uff1a\u4e2d\u7b49 \u77e5\u8bc6\u70b9\uff1a\u94fe\u8868\u3001\u6570\u5b66 \u5730\u5740\uff1a https://leetcode-cn.com/problems/add-two-numbers/ \u7ed9\u51fa\u4e24\u4e2a \u975e\u7a7a \u7684\u94fe\u8868\u7528\u6765\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5176\u4e2d\uff0c\u5b83\u4eec\u5404\u81ea\u7684\u4f4d\u6570\u662f\u6309\u7167 \u9006\u5e8f \u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8 \u4e00\u4f4d \u6570\u5b57\u3002 \u5982\u679c\uff0c\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u8d77\u6765\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\u6765\u8868\u793a\u5b83\u4eec\u7684\u548c\u3002 \u60a8\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 0 \u5f00\u5934\u3002 \u793a\u4f8b: \u8f93\u5165\uff1a(2 -> 4 -> 3) + (5 -> 6 -> 4) \u8f93\u51fa\uff1a7 -> 0 -> 8 \u539f\u56e0\uff1a342 + 465 = 807 \u4e24\u6b21\u904d\u5386 \u9996\u5148\u4ece\u9898\u76ee\u63cf\u8ff0\u6211\u4eec\u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u5f97\u5230\u4e00\u4e2a\u5f88\u76f4\u63a5\u7684\u89e3\u6cd5\uff0c\u5148\u8ba1\u7b97 l1 \u548c l2 \u8868\u793a\u7684\u6574\u6570\uff0c\u76f8\u52a0\u540e\uff0c\u518d\u6839\u636e\u6570\u5b57\u63a8\u5bfc\u51fa l3 \u8fd9\u65f6\u4f1a\u7528\u5230\u6570\u5b66\u7684\u8fdb\u4f4d\u548c\u53d6\u4f59\u3002 \u63a8\u5bfc\u8fc7\u7a0b l1: 2 -> 4 -> 3 | 2 * ( 10 ** 0 ) + 4 * ( 10 ** 1 ) + 3 * ( 10 ** 2 ) = 342 l2: 5 -> 6 -> 4 | 5 * ( 10 ** 0 ) + 6 * ( 10 ** 1 ) + 4 * ( 10 ** 2 ) = 465 807 -> 807 % 10 = 7 | -> 80 % 10 = 0 | -> 8 % 10 = 8 l3: 8 -> 0 -> 7 \u4ee3\u7801 \u6839\u636e\u4e0a\u8fb9\u7684\u63a8\u5bfc\uff0c\u5f88\u81ea\u7136\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u7ecf\u5386\u4e24\u6b21\u904d\u5386\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode: n1, n2 = 0, 0 n = 0 while l1 or l2: if l1: n1 += l1.val * (10 ** n) l1 = l1.next if l2: n2 += l2.val * (10 ** n) l2 = l2.next n += 1 n3 = n1 + n2 if n3 == 0: return ListNode(0) l3 = ListNode(0) l4 = l3 while n3 > 0: rmd = n3 % 10 l4.next = ListNode(rmd) l4 = l4.next n3 = (n3 - rmd) // 10 return l3.next \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c n = max(len(l1), len(l2)) + 1 \u52a0\u4e00\u662f\u56e0\u4e3a\u53ef\u80fd\u4f1a\u9047\u5230\u8fdb\u4f4d\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u540c\u4e0a \u4e00\u6b21\u904d\u5386 \u518d\u56de\u8fc7\u5934\u6765\u89c2\u5bdf\u4e09\u4e2a\u94fe\u8868\u53ef\u4ee5\u53d1\u73b0\uff0c l3 \u7684\u6bcf\u4e2a\u4f4d\u7f6e\u521a\u597d\u662f l1 \u548c l2 \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u548c\uff0c\u90a3\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5728\u4e00\u6b21\u5faa\u73af\u5185\u5b8c\u6210\u53d6\u503c\u3001\u6c42\u548c\u3001\u751f\u6210 l3 \u7684\u64cd\u4f5c\uff0c\u53ea\u662f\u9700\u8981\u5728\u5217\u8868\u7684\u7ed3\u5c3e\u9700\u8981\u8003\u8651 carry \u8fdb\u4f4d\u7684\u95ee\u9898\u3002 \u63a8\u5bfc\u8fc7\u7a0b l1: 2 -> 4 -> 3 + + + l2: 5 -> 6 -> 4 = = = l3: 7+ 1 -> 0 -> 7 \u4ee3\u7801 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode: carry = 0 l3 = ListNode(0) l4 = l3 while l1 or l2 or carry: n3 = carry if l1: n3 += l1.val l1 = l1.next if l2: n3 += l2.val l2 = l2.next carry = n3 // 10 l4.next = ListNode(n3 % 10) l4 = l4.next return l3.next \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u4e24\u79cd\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u4f46\u662f\u53ea\u8fdb\u884c\u4e86\u4e00\u6b21\u904d\u5386\uff0c\u6240\u4ee5\u5b9e\u9645\u65f6\u95f4\u4f1a\u5feb\u4e00\u4e9b \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u540c\u6837\u7684\u4f1a\u8282\u7701\u6389 n1 \u548c n2 \u6240\u5360\u7528\u7684\u7a7a\u95f4\u3002 \u5176\u4ed6\u8bed\u8a00 Python Go","title":"2. \u4e24\u6570\u76f8\u52a0"},{"location":"problems/2-add-two-numbers/#_1","text":"","title":"\u4e24\u6570\u76f8\u52a0"},{"location":"problems/2-add-two-numbers/#_2","text":"\u96be\u5ea6\uff1a\u4e2d\u7b49 \u77e5\u8bc6\u70b9\uff1a\u94fe\u8868\u3001\u6570\u5b66 \u5730\u5740\uff1a https://leetcode-cn.com/problems/add-two-numbers/ \u7ed9\u51fa\u4e24\u4e2a \u975e\u7a7a \u7684\u94fe\u8868\u7528\u6765\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5176\u4e2d\uff0c\u5b83\u4eec\u5404\u81ea\u7684\u4f4d\u6570\u662f\u6309\u7167 \u9006\u5e8f \u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8 \u4e00\u4f4d \u6570\u5b57\u3002 \u5982\u679c\uff0c\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u8d77\u6765\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\u6765\u8868\u793a\u5b83\u4eec\u7684\u548c\u3002 \u60a8\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 0 \u5f00\u5934\u3002 \u793a\u4f8b: \u8f93\u5165\uff1a(2 -> 4 -> 3) + (5 -> 6 -> 4) \u8f93\u51fa\uff1a7 -> 0 -> 8 \u539f\u56e0\uff1a342 + 465 = 807","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"problems/2-add-two-numbers/#_3","text":"\u9996\u5148\u4ece\u9898\u76ee\u63cf\u8ff0\u6211\u4eec\u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u5f97\u5230\u4e00\u4e2a\u5f88\u76f4\u63a5\u7684\u89e3\u6cd5\uff0c\u5148\u8ba1\u7b97 l1 \u548c l2 \u8868\u793a\u7684\u6574\u6570\uff0c\u76f8\u52a0\u540e\uff0c\u518d\u6839\u636e\u6570\u5b57\u63a8\u5bfc\u51fa l3 \u8fd9\u65f6\u4f1a\u7528\u5230\u6570\u5b66\u7684\u8fdb\u4f4d\u548c\u53d6\u4f59\u3002","title":"\u4e24\u6b21\u904d\u5386"},{"location":"problems/2-add-two-numbers/#_4","text":"l1: 2 -> 4 -> 3 | 2 * ( 10 ** 0 ) + 4 * ( 10 ** 1 ) + 3 * ( 10 ** 2 ) = 342 l2: 5 -> 6 -> 4 | 5 * ( 10 ** 0 ) + 6 * ( 10 ** 1 ) + 4 * ( 10 ** 2 ) = 465 807 -> 807 % 10 = 7 | -> 80 % 10 = 0 | -> 8 % 10 = 8 l3: 8 -> 0 -> 7","title":"\u63a8\u5bfc\u8fc7\u7a0b"},{"location":"problems/2-add-two-numbers/#_5","text":"\u6839\u636e\u4e0a\u8fb9\u7684\u63a8\u5bfc\uff0c\u5f88\u81ea\u7136\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u7ecf\u5386\u4e24\u6b21\u904d\u5386\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode: n1, n2 = 0, 0 n = 0 while l1 or l2: if l1: n1 += l1.val * (10 ** n) l1 = l1.next if l2: n2 += l2.val * (10 ** n) l2 = l2.next n += 1 n3 = n1 + n2 if n3 == 0: return ListNode(0) l3 = ListNode(0) l4 = l3 while n3 > 0: rmd = n3 % 10 l4.next = ListNode(rmd) l4 = l4.next n3 = (n3 - rmd) // 10 return l3.next","title":"\u4ee3\u7801"},{"location":"problems/2-add-two-numbers/#_6","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c n = max(len(l1), len(l2)) + 1 \u52a0\u4e00\u662f\u56e0\u4e3a\u53ef\u80fd\u4f1a\u9047\u5230\u8fdb\u4f4d\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u540c\u4e0a","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/2-add-two-numbers/#_7","text":"\u518d\u56de\u8fc7\u5934\u6765\u89c2\u5bdf\u4e09\u4e2a\u94fe\u8868\u53ef\u4ee5\u53d1\u73b0\uff0c l3 \u7684\u6bcf\u4e2a\u4f4d\u7f6e\u521a\u597d\u662f l1 \u548c l2 \u6bcf\u4e2a\u4f4d\u7f6e\u7684\u548c\uff0c\u90a3\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5728\u4e00\u6b21\u5faa\u73af\u5185\u5b8c\u6210\u53d6\u503c\u3001\u6c42\u548c\u3001\u751f\u6210 l3 \u7684\u64cd\u4f5c\uff0c\u53ea\u662f\u9700\u8981\u5728\u5217\u8868\u7684\u7ed3\u5c3e\u9700\u8981\u8003\u8651 carry \u8fdb\u4f4d\u7684\u95ee\u9898\u3002","title":"\u4e00\u6b21\u904d\u5386"},{"location":"problems/2-add-two-numbers/#_8","text":"l1: 2 -> 4 -> 3 + + + l2: 5 -> 6 -> 4 = = = l3: 7+ 1 -> 0 -> 7","title":"\u63a8\u5bfc\u8fc7\u7a0b"},{"location":"problems/2-add-two-numbers/#_9","text":"#!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode: carry = 0 l3 = ListNode(0) l4 = l3 while l1 or l2 or carry: n3 = carry if l1: n3 += l1.val l1 = l1.next if l2: n3 += l2.val l2 = l2.next carry = n3 // 10 l4.next = ListNode(n3 % 10) l4 = l4.next return l3.next","title":"\u4ee3\u7801"},{"location":"problems/2-add-two-numbers/#_10","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u4e24\u79cd\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u4f46\u662f\u53ea\u8fdb\u884c\u4e86\u4e00\u6b21\u904d\u5386\uff0c\u6240\u4ee5\u5b9e\u9645\u65f6\u95f4\u4f1a\u5feb\u4e00\u4e9b \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u540c\u6837\u7684\u4f1a\u8282\u7701\u6389 n1 \u548c n2 \u6240\u5360\u7528\u7684\u7a7a\u95f4\u3002","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/2-add-two-numbers/#_11","text":"Python Go","title":"\u5176\u4ed6\u8bed\u8a00"},{"location":"problems/3-longest-substring-without-repeating-characters/","text":"\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32 \u9898\u76ee\u63cf\u8ff0 \u96be\u5ea6\uff1a\u4e2d\u7b49 \u77e5\u8bc6\u70b9\uff1a\u54c8\u5e0c\u8868\u3001\u53cc\u6307\u9488\u3001\u5b57\u7b26\u4e32\u3001Sliding Window \u5730\u5740\uff1a https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/ \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684 \u6700\u957f\u5b50\u4e32 \u7684\u957f\u5ea6\u3002 \u793a\u4f8b 1: \u8f93\u5165: \"abcabcbb\" \u8f93\u51fa: 3 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"abc\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002 \u793a\u4f8b 2: \u8f93\u5165: \"bbbbb\" \u8f93\u51fa: 1 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"b\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 1\u3002 \u793a\u4f8b 3: \u8f93\u5165: \"pwwkew\" \u8f93\u51fa: 3 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"wke\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f \u5b50\u4e32 \u7684\u957f\u5ea6\uff0c\"pwke\" \u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e0d\u662f\u5b50\u4e32\u3002 \u66b4\u529b\u89e3\u6cd5 \u66b4\u529b\u89e3\u6cd5\u4f9d\u7136\u662f\u6700\u5bb9\u6613\u60f3\u5230\uff0c\u4e5f\u6700\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 i = 0 \u548c j = i + 1 \uff0c i \u4e0d\u53d8\uff0c j \u4e0d\u65ad\u7684\u53f3\u79fb\uff0c\u540c\u65f6\u5c06\u9047\u5230\u7684\u5b57\u7b26\u50a8\u5b58\u5230\u54c8\u5e0c\u7ed3\u6784\u4e2d\uff0c\u5982\u679c\u78b0\u89c1\u91cd\u590d\u6570\u636e\uff0c\u5219 i \u53f3\u79fb\u4e00\u4f4d\uff0c\u91cd\u65b0\u5f00\u59cb\u53f3\u79fb j \uff0c\u5e76\u5c06\u9047\u5230\u7684\u6700\u5927\u957f\u5ea6\u50a8\u5b58\u8d77\u6765\u3002 \u4ee3\u7801 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def lengthOfLongestSubstring(self, s: str) -> int: if not s: return 0 ans = 1 temp = 1 i = 0 j = 1 letters = {s[0]} while i < len(s) and j < len(s): if s[j] not in letters: letters.add(s[j]) temp += 1 ans = max(ans, temp) j += 1 else: i += 1 j = i + 1 letters = {s[i]} temp = 1 return ans \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\uff0c\u663e\u7136\u6700\u574f\u7684\u60c5\u51b5\u9700\u8981\u7ecf\u8fc7\u4e24\u6b21\u5faa\u73af \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6240\u9700\u5916\u90e8\u50a8\u5b58\u7a7a\u95f4\u6700\u5927\u4e3a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \u4f18\u5316 \u5373\u4f7f\u662f\u4f7f\u7528\u66b4\u529b\u89e3\u6cd5\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u4f18\u5316\uff0c\u5728 Python \u4e2d\u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u8981\u5c3d\u91cf\u907f\u514d\u4f7f\u7528 while \uff0c\u56e0\u4e3a\u8fd9\u662f\u6548\u7387\u6700\u4f4e\u7684\uff0c\u5177\u4f53\u7684\u6bd4\u8f83\u60c5\u51b5\u53ef\u4ee5\u770b\u6211\u7684\u8fd9\u7bc7\u6587\u7ae0 Python \u4e2d\u5faa\u73af\u8bed\u53e5\u901f\u5ea6\u5bf9\u6bd4 \u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5c06 while \u6539\u4e3a for \u7528\u6cd5\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def lengthOfLongestSubstring(self, s: str) -> int: if not s: return 0 ans = 1 temp = 1 letters = {s[0]} for i in range(len(s)): for j in range(1, len(s)): k = i + j if k >= len(s): break if s[k] not in letters: letters.add(s[k]) temp += 1 ans = max(ans, temp) else: letters = {s[i + 1]} temp = 1 break return ans \u8fd9\u6837\u4f18\u5316\u5927\u6982\u53ef\u4ee5\u8282\u7701\u56db\u5206\u4e4b\u4e00\u7684\u65f6\u95f4\uff0c\u4e0d\u8fc7\u5e76\u6ca1\u6709\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u4ec0\u4e48\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u91cf\u7ea7\u7684\u4f18\u5316\u3002 \u6ed1\u52a8\u7a97\u53e3 \u66b4\u529b\u89e3\u6cd5\u7684\u7f3a\u70b9\u5728\u54ea\u91cc\u5462\uff1f\u51e1\u662f\u6d89\u53ca\u5230\u8ba1\u7b97\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u7684\u5b50\u5143\u7d20\u95ee\u9898\uff0c\u66b4\u529b\u89e3\u6cd5\u90fd\u4f1a\u5f88\u591a\u7684\u91cd\u590d\u8fd0\u7b97\uff0c\u5c3d\u91cf\u591a\u7684\u53bb\u6389\u8fd9\u4e9b\u91cd\u590d\u8ba1\u7b97\u5373\u53ef\u3002 \u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\u53ef\u4ee5\u7528\u4ee5\u89e3\u51b3\u6570\u7ec4/\u5b57\u7b26\u4e32\u7684\u5b50\u5143\u7d20\u95ee\u9898\uff0c\u5b83\u53ef\u4ee5\u5c06\u5d4c\u5957\u7684\u5faa\u73af\u95ee\u9898\uff0c\u8f6c\u6362\u4e3a\u5355\u5faa\u73af\u95ee\u9898\uff0c\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u5728\u6570\u7ec4/\u5b57\u7b26\u4e32\u4e2d\u6709\u5f00\u59cb\u548c\u7ed3\u675f\u7d22\u5f15\u5b9a\u4e49\u7684\u4e00\u4e9b\u5217\u5143\u7d20\u7684\u96c6\u5408\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7a97\u53e3\u3002\u5f53\u4ed6\u4eec\u7684\u7d22\u5f15\u503c\u671d\u7740\u4e00\u4e2a\u65b9\u5411\u589e\u52a0/\u51cf\u5c11\u65f6\uff0c\u4fbf\u662f\u7a97\u53e3\u7684\u6ed1\u52a8\uff0c\u6bd4\u5982 [i, j) -> [i + 1, j + 1) \u63a8\u5bfc\u8fc7\u7a0b \u66b4\u529b\u89e3\u6cd5\u7684\u63a8\u5bfc\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684 abcabcbb i j ans ab 0 1 2 abc 0 2 3 abca 0 3 3 bc 1 2 3 bca 1 3 3 ... \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d bc 1 2 3 bca 1 3 3 \u5c31\u662f\u91cd\u590d\u7684\u8ba1\u7b97\u3002 \u5f53 j \u7b2c\u4e00\u6b21\u8d70\u8fc7\u8fd9\u4e9b\u4f4d\u7f6e\u65f6\uff0c\u662f\u5426\u6709\u91cd\u590d\u6211\u4eec\u662f\u77e5\u9053\u7684\uff0c\u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\u8d77\u6765\uff0c\u7136\u540e\u53f3\u79fb i \u81f3\u4e0d\u91cd\u590d\u7684\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u904d\u5386\u4e0b\u53bb\u5373\u53ef\u3002 abcabcbb i j ans a 0 0 1 ab 0 1 2 abc 0 2 3 abca 0 3 3 bcab 1 4 3 cabc 2 5 3 abcb 3 6 3 cbb 5 6 3 b 7 7 3 \u8fd9\u4e2a\u8fc7\u7a0b\u53ea\u7ecf\u5386\u4e86\u4e00\u6b21\u5faa\u73af\uff0c\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u8fd9\u5c06\u662f\u6700\u4f18\u89e3\u3002 \u4ee3\u7801 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def lengthOfLongestSubstring(self, s: str) -> int: ans = 0 # \u6700\u5927\u957f\u5ea6 letters = {} temp = 0 # \u4e34\u65f6\u957f\u5ea6 i = 0 for j in range(len(s)): a = s[j] if a not in letters: letters[a] = j temp += 1 ans = ans if ans > temp else temp else: if letters[a] >= i: # \u5982\u679c\u91cd\u590d\u5750\u6807\u7684\u4f4d\u7f6e\u5927\u4e8e i\uff0c\u79fb\u52a8 i \u5230\u5b83\u7684\u524d\u65b9 # \u5e76\u91cd\u65b0\u8ba1\u7b97\u4e34\u65f6\u957f\u5ea6\uff0c\u6b64\u65f6\u80af\u5b9a\u5c0f\u4e8e\u6700\u5927\u957f\u5ea6 temp = j - letters[a] i = letters[a] + 1 else: # \u5426\u5219\u7ee7\u7eed\u8ba1\u7b97\u4e34\u65f6\u957f\u5ea6 temp += 1 ans = ans if ans > temp else temp letters[a] = j return ans \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21 s \u5373\u53ef \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5f53\u6574\u4e2a\u5b57\u7b26\u4e32\u65e0\u91cd\u590d\u5b57\u7b26\u65f6\uff0c\u9700\u8981\u50a8\u5b58 len(s) \u7684\u7a7a\u95f4 \u4f18\u5316\uff1f \u5982\u679c\u4f60\u60f3\u7684\u8bdd\uff0c\u8fd8\u662f\u53ef\u4ee5\u518d\u6b21\u4f18\u5316\u7684\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u4e0d\u662f\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u800c\u662f\u4ee3\u7801\u590d\u6742\u5ea6 \u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5d4c\u5957\u4e86\u4e24\u4e2a ifelse \uff0c\u5e76\u4e14\u6709\u4e9b\u91cd\u590d\u4ee3\u7801\uff0c\u5982\u679c\u6211\u4eec\u60f3\u7684\u8bdd\uff0c\u662f\u53ef\u4ee5\u53bb\u6389\u7684\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def lengthOfLongestSubstring(self, s: str) -> int: ans = 0 letters = {} i = 0 for j in range(len(s)): a = s[j] if a in letters: # \u53ea\u8981\u53d1\u73b0\u91cd\u590d\u5b57\u7b26\uff0c\u5c31\u91cd\u65b0\u8ba1\u7b97 i \u7684\u4f4d\u7f6e i = max(letters[a] + 1, i) # \u6bcf\u6b21\u90fd\u91cd\u65b0\u8ba1\u7b97\u6700\u5927\u503c ans = max(ans, j - i +1) letters[a] = j return ans \u8fd9\u662f\u4e00\u79cd\u65f6\u95f4\u6362\u903b\u8f91\u7684\u6539\u6cd5\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f O(n)\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u91cd\u590d\u8ba1\u7b97\uff0c\u901f\u5ea6\u4f1a\u7a0d\u6162\u4e00\u4e9b\uff0c\u4f46\u662f\u903b\u8f91\u65e0\u8111\uff0c\u4ee3\u7801\u7f8e\u89c2\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u6781\u81f4\u7684\u901f\u5ea6\uff0c\u90a3\u8fd9\u662f\u4e00\u79cd\u4e0d\u9519\u7684\u5199\u6cd5\u3002 \u5176\u4ed6\u8bed\u8a00 python","title":"3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32"},{"location":"problems/3-longest-substring-without-repeating-characters/#_1","text":"","title":"\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32"},{"location":"problems/3-longest-substring-without-repeating-characters/#_2","text":"\u96be\u5ea6\uff1a\u4e2d\u7b49 \u77e5\u8bc6\u70b9\uff1a\u54c8\u5e0c\u8868\u3001\u53cc\u6307\u9488\u3001\u5b57\u7b26\u4e32\u3001Sliding Window \u5730\u5740\uff1a https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/ \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684 \u6700\u957f\u5b50\u4e32 \u7684\u957f\u5ea6\u3002 \u793a\u4f8b 1: \u8f93\u5165: \"abcabcbb\" \u8f93\u51fa: 3 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"abc\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002 \u793a\u4f8b 2: \u8f93\u5165: \"bbbbb\" \u8f93\u51fa: 1 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"b\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 1\u3002 \u793a\u4f8b 3: \u8f93\u5165: \"pwwkew\" \u8f93\u51fa: 3 \u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"wke\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f \u5b50\u4e32 \u7684\u957f\u5ea6\uff0c\"pwke\" \u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e0d\u662f\u5b50\u4e32\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"problems/3-longest-substring-without-repeating-characters/#_3","text":"\u66b4\u529b\u89e3\u6cd5\u4f9d\u7136\u662f\u6700\u5bb9\u6613\u60f3\u5230\uff0c\u4e5f\u6700\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 i = 0 \u548c j = i + 1 \uff0c i \u4e0d\u53d8\uff0c j \u4e0d\u65ad\u7684\u53f3\u79fb\uff0c\u540c\u65f6\u5c06\u9047\u5230\u7684\u5b57\u7b26\u50a8\u5b58\u5230\u54c8\u5e0c\u7ed3\u6784\u4e2d\uff0c\u5982\u679c\u78b0\u89c1\u91cd\u590d\u6570\u636e\uff0c\u5219 i \u53f3\u79fb\u4e00\u4f4d\uff0c\u91cd\u65b0\u5f00\u59cb\u53f3\u79fb j \uff0c\u5e76\u5c06\u9047\u5230\u7684\u6700\u5927\u957f\u5ea6\u50a8\u5b58\u8d77\u6765\u3002","title":"\u66b4\u529b\u89e3\u6cd5"},{"location":"problems/3-longest-substring-without-repeating-characters/#_4","text":"#!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def lengthOfLongestSubstring(self, s: str) -> int: if not s: return 0 ans = 1 temp = 1 i = 0 j = 1 letters = {s[0]} while i < len(s) and j < len(s): if s[j] not in letters: letters.add(s[j]) temp += 1 ans = max(ans, temp) j += 1 else: i += 1 j = i + 1 letters = {s[i]} temp = 1 return ans","title":"\u4ee3\u7801"},{"location":"problems/3-longest-substring-without-repeating-characters/#_5","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\uff0c\u663e\u7136\u6700\u574f\u7684\u60c5\u51b5\u9700\u8981\u7ecf\u8fc7\u4e24\u6b21\u5faa\u73af \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6240\u9700\u5916\u90e8\u50a8\u5b58\u7a7a\u95f4\u6700\u5927\u4e3a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/3-longest-substring-without-repeating-characters/#_6","text":"\u5373\u4f7f\u662f\u4f7f\u7528\u66b4\u529b\u89e3\u6cd5\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u4f18\u5316\uff0c\u5728 Python \u4e2d\u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u8981\u5c3d\u91cf\u907f\u514d\u4f7f\u7528 while \uff0c\u56e0\u4e3a\u8fd9\u662f\u6548\u7387\u6700\u4f4e\u7684\uff0c\u5177\u4f53\u7684\u6bd4\u8f83\u60c5\u51b5\u53ef\u4ee5\u770b\u6211\u7684\u8fd9\u7bc7\u6587\u7ae0 Python \u4e2d\u5faa\u73af\u8bed\u53e5\u901f\u5ea6\u5bf9\u6bd4 \u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5c06 while \u6539\u4e3a for \u7528\u6cd5\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def lengthOfLongestSubstring(self, s: str) -> int: if not s: return 0 ans = 1 temp = 1 letters = {s[0]} for i in range(len(s)): for j in range(1, len(s)): k = i + j if k >= len(s): break if s[k] not in letters: letters.add(s[k]) temp += 1 ans = max(ans, temp) else: letters = {s[i + 1]} temp = 1 break return ans \u8fd9\u6837\u4f18\u5316\u5927\u6982\u53ef\u4ee5\u8282\u7701\u56db\u5206\u4e4b\u4e00\u7684\u65f6\u95f4\uff0c\u4e0d\u8fc7\u5e76\u6ca1\u6709\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u4ec0\u4e48\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u91cf\u7ea7\u7684\u4f18\u5316\u3002","title":"\u4f18\u5316"},{"location":"problems/3-longest-substring-without-repeating-characters/#_7","text":"\u66b4\u529b\u89e3\u6cd5\u7684\u7f3a\u70b9\u5728\u54ea\u91cc\u5462\uff1f\u51e1\u662f\u6d89\u53ca\u5230\u8ba1\u7b97\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u7684\u5b50\u5143\u7d20\u95ee\u9898\uff0c\u66b4\u529b\u89e3\u6cd5\u90fd\u4f1a\u5f88\u591a\u7684\u91cd\u590d\u8fd0\u7b97\uff0c\u5c3d\u91cf\u591a\u7684\u53bb\u6389\u8fd9\u4e9b\u91cd\u590d\u8ba1\u7b97\u5373\u53ef\u3002 \u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\u53ef\u4ee5\u7528\u4ee5\u89e3\u51b3\u6570\u7ec4/\u5b57\u7b26\u4e32\u7684\u5b50\u5143\u7d20\u95ee\u9898\uff0c\u5b83\u53ef\u4ee5\u5c06\u5d4c\u5957\u7684\u5faa\u73af\u95ee\u9898\uff0c\u8f6c\u6362\u4e3a\u5355\u5faa\u73af\u95ee\u9898\uff0c\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \u5728\u6570\u7ec4/\u5b57\u7b26\u4e32\u4e2d\u6709\u5f00\u59cb\u548c\u7ed3\u675f\u7d22\u5f15\u5b9a\u4e49\u7684\u4e00\u4e9b\u5217\u5143\u7d20\u7684\u96c6\u5408\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7a97\u53e3\u3002\u5f53\u4ed6\u4eec\u7684\u7d22\u5f15\u503c\u671d\u7740\u4e00\u4e2a\u65b9\u5411\u589e\u52a0/\u51cf\u5c11\u65f6\uff0c\u4fbf\u662f\u7a97\u53e3\u7684\u6ed1\u52a8\uff0c\u6bd4\u5982 [i, j) -> [i + 1, j + 1)","title":"\u6ed1\u52a8\u7a97\u53e3"},{"location":"problems/3-longest-substring-without-repeating-characters/#_8","text":"\u66b4\u529b\u89e3\u6cd5\u7684\u63a8\u5bfc\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684 abcabcbb i j ans ab 0 1 2 abc 0 2 3 abca 0 3 3 bc 1 2 3 bca 1 3 3 ... \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d bc 1 2 3 bca 1 3 3 \u5c31\u662f\u91cd\u590d\u7684\u8ba1\u7b97\u3002 \u5f53 j \u7b2c\u4e00\u6b21\u8d70\u8fc7\u8fd9\u4e9b\u4f4d\u7f6e\u65f6\uff0c\u662f\u5426\u6709\u91cd\u590d\u6211\u4eec\u662f\u77e5\u9053\u7684\uff0c\u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\u8d77\u6765\uff0c\u7136\u540e\u53f3\u79fb i \u81f3\u4e0d\u91cd\u590d\u7684\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u904d\u5386\u4e0b\u53bb\u5373\u53ef\u3002 abcabcbb i j ans a 0 0 1 ab 0 1 2 abc 0 2 3 abca 0 3 3 bcab 1 4 3 cabc 2 5 3 abcb 3 6 3 cbb 5 6 3 b 7 7 3 \u8fd9\u4e2a\u8fc7\u7a0b\u53ea\u7ecf\u5386\u4e86\u4e00\u6b21\u5faa\u73af\uff0c\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u8fd9\u5c06\u662f\u6700\u4f18\u89e3\u3002","title":"\u63a8\u5bfc\u8fc7\u7a0b"},{"location":"problems/3-longest-substring-without-repeating-characters/#_9","text":"#!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def lengthOfLongestSubstring(self, s: str) -> int: ans = 0 # \u6700\u5927\u957f\u5ea6 letters = {} temp = 0 # \u4e34\u65f6\u957f\u5ea6 i = 0 for j in range(len(s)): a = s[j] if a not in letters: letters[a] = j temp += 1 ans = ans if ans > temp else temp else: if letters[a] >= i: # \u5982\u679c\u91cd\u590d\u5750\u6807\u7684\u4f4d\u7f6e\u5927\u4e8e i\uff0c\u79fb\u52a8 i \u5230\u5b83\u7684\u524d\u65b9 # \u5e76\u91cd\u65b0\u8ba1\u7b97\u4e34\u65f6\u957f\u5ea6\uff0c\u6b64\u65f6\u80af\u5b9a\u5c0f\u4e8e\u6700\u5927\u957f\u5ea6 temp = j - letters[a] i = letters[a] + 1 else: # \u5426\u5219\u7ee7\u7eed\u8ba1\u7b97\u4e34\u65f6\u957f\u5ea6 temp += 1 ans = ans if ans > temp else temp letters[a] = j return ans","title":"\u4ee3\u7801"},{"location":"problems/3-longest-substring-without-repeating-characters/#_10","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21 s \u5373\u53ef \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5f53\u6574\u4e2a\u5b57\u7b26\u4e32\u65e0\u91cd\u590d\u5b57\u7b26\u65f6\uff0c\u9700\u8981\u50a8\u5b58 len(s) \u7684\u7a7a\u95f4","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/3-longest-substring-without-repeating-characters/#_11","text":"\u5982\u679c\u4f60\u60f3\u7684\u8bdd\uff0c\u8fd8\u662f\u53ef\u4ee5\u518d\u6b21\u4f18\u5316\u7684\uff0c\u4e0d\u8fc7\u8fd9\u6b21\u4e0d\u662f\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u800c\u662f\u4ee3\u7801\u590d\u6742\u5ea6 \u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5d4c\u5957\u4e86\u4e24\u4e2a ifelse \uff0c\u5e76\u4e14\u6709\u4e9b\u91cd\u590d\u4ee3\u7801\uff0c\u5982\u679c\u6211\u4eec\u60f3\u7684\u8bdd\uff0c\u662f\u53ef\u4ee5\u53bb\u6389\u7684\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: def lengthOfLongestSubstring(self, s: str) -> int: ans = 0 letters = {} i = 0 for j in range(len(s)): a = s[j] if a in letters: # \u53ea\u8981\u53d1\u73b0\u91cd\u590d\u5b57\u7b26\uff0c\u5c31\u91cd\u65b0\u8ba1\u7b97 i \u7684\u4f4d\u7f6e i = max(letters[a] + 1, i) # \u6bcf\u6b21\u90fd\u91cd\u65b0\u8ba1\u7b97\u6700\u5927\u503c ans = max(ans, j - i +1) letters[a] = j return ans \u8fd9\u662f\u4e00\u79cd\u65f6\u95f4\u6362\u903b\u8f91\u7684\u6539\u6cd5\uff0c\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u662f O(n)\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u91cd\u590d\u8ba1\u7b97\uff0c\u901f\u5ea6\u4f1a\u7a0d\u6162\u4e00\u4e9b\uff0c\u4f46\u662f\u903b\u8f91\u65e0\u8111\uff0c\u4ee3\u7801\u7f8e\u89c2\uff0c\u5982\u679c\u4f60\u4e0d\u9700\u8981\u6781\u81f4\u7684\u901f\u5ea6\uff0c\u90a3\u8fd9\u662f\u4e00\u79cd\u4e0d\u9519\u7684\u5199\u6cd5\u3002","title":"\u4f18\u5316\uff1f"},{"location":"problems/3-longest-substring-without-repeating-characters/#_12","text":"python","title":"\u5176\u4ed6\u8bed\u8a00"},{"location":"problems/4-median-of-two-sorted-arrays/","text":"\u5bfb\u627e\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570 \u9898\u76ee\u63cf\u8ff0 \u96be\u5ea6\uff1a\u56f0\u96be \u77e5\u8bc6\u70b9\uff1a\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e\u3001\u5206\u6cbb\u7b97\u6cd5 \u5730\u5740\uff1a https://leetcode-cn.com/problems/median-of-two-sorted-arrays/ \u7ed9\u5b9a\u4e24\u4e2a\u5927\u5c0f\u4e3a m \u548c n \u7684\u6709\u5e8f\u6570\u7ec4 nums1 \u548c nums2\u3002 \u8bf7\u4f60\u627e\u51fa\u8fd9\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\uff0c\u5e76\u4e14\u8981\u6c42\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log(m + n))\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe nums1 \u548c nums2 \u4e0d\u4f1a\u540c\u65f6\u4e3a\u7a7a\u3002 \u793a\u4f8b 1: nums1 = [1, 3] nums2 = [2] \u5219\u4e2d\u4f4d\u6570\u662f 2.0 \u793a\u4f8b 2: nums1 = [1, 2] nums2 = [3, 4] \u5219\u4e2d\u4f4d\u6570\u662f (2 + 3)/2 = 2.5","title":"\u5bfb\u627e\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570"},{"location":"problems/4-median-of-two-sorted-arrays/#_1","text":"","title":"\u5bfb\u627e\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570"},{"location":"problems/4-median-of-two-sorted-arrays/#_2","text":"\u96be\u5ea6\uff1a\u56f0\u96be \u77e5\u8bc6\u70b9\uff1a\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e\u3001\u5206\u6cbb\u7b97\u6cd5 \u5730\u5740\uff1a https://leetcode-cn.com/problems/median-of-two-sorted-arrays/ \u7ed9\u5b9a\u4e24\u4e2a\u5927\u5c0f\u4e3a m \u548c n \u7684\u6709\u5e8f\u6570\u7ec4 nums1 \u548c nums2\u3002 \u8bf7\u4f60\u627e\u51fa\u8fd9\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570\uff0c\u5e76\u4e14\u8981\u6c42\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log(m + n))\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe nums1 \u548c nums2 \u4e0d\u4f1a\u540c\u65f6\u4e3a\u7a7a\u3002 \u793a\u4f8b 1: nums1 = [1, 3] nums2 = [2] \u5219\u4e2d\u4f4d\u6570\u662f 2.0 \u793a\u4f8b 2: nums1 = [1, 2] nums2 = [3, 4] \u5219\u4e2d\u4f4d\u6570\u662f (2 + 3)/2 = 2.5","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"problems/7-reverse-integer/","text":"\u6574\u6570\u7ffb\u8f6c \u9898\u76ee\u63cf\u8ff0 \u96be\u5ea6\uff1a\u7b80\u5355 \u77e5\u8bc6\u70b9\uff1a\u6570\u5b66 \u5730\u5740\uff1a https://leetcode-cn.com/problems/reverse-integer/ \u7ed9\u51fa\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6574\u6570\u4e2d\u6bcf\u4f4d\u4e0a\u7684\u6570\u5b57\u8fdb\u884c\u53cd\u8f6c\u3002 \u793a\u4f8b 1: \u8f93\u5165: 123 \u8f93\u51fa: 321 \u793a\u4f8b 2: \u8f93\u5165: -123 \u8f93\u51fa: -321 \u793a\u4f8b 3: \u8f93\u5165: 120 \u8f93\u51fa: 21 \u6ce8\u610f: \u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8\u5f97\u4e0b 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5219\u5176\u6570\u503c\u8303\u56f4\u4e3a [\u22122^31, 2^31 \u2212 1]\u3002\u8bf7\u6839\u636e\u8fd9\u4e2a\u5047\u8bbe\uff0c\u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u6ea2\u51fa\u90a3\u4e48\u5c31\u8fd4\u56de 0\u3002 \u5b57\u7b26\u4e32\u7ffb\u8f6c \u8bf4\u6765\u60ed\u6127\uff0c\u770b\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u5148\u8f6c\u6210\u5b57\u7b26\u4e32\uff0c\u7ffb\u8f6c\u5b8c\u5b57\u7b26\u4e32\u540e\uff0c\u518d\u6b21\u8f6c\u4e3a\u6574\u6570\uff0c\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u503c\u5f97\u63a8\u5bfc\u4e86\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: MAX = 2 ** 31 - 1 MIN = -2 ** 31 def reverse(self, x: int) -> int: if x == 0: return 0 y = \"\" rev = 0 a = str(x) length = len(a) for i in range(length): index = length - 1 - i if not y and a[index] == \"0\": continue y += a[index] if y[-1] == \"-\": rev = -int(y[0:-1]) if rev < self.MIN: return 0 return rev rev = int(y) if rev > self.MAX: return 0 return rev \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(log(x))\uff0cx \u4e2d\u5927\u7ea6\u6709 log10(x) \u4f4d\u6570\u5b57 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) \u5f39\u51fa\u548c\u63a8\u5165\u6570\u5b57 \u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e0d\u9ad8\uff0c\u4f46\u662f\u5206\u6790\u8d77\u6765\u592a\u590d\u6742\u4e86\uff0c\u8981\u8003\u8651\u5404\u79cd\u60c5\u51b5\uff0c\u5f88\u5bb9\u6613\u51fa BUG\uff0c\u8bf4\u5230\u6570\u5b57\u7ffb\u8f6c\uff0c\u53d6\u4f59\u3001\u5f39\u51fa\u3001\u63a8\u5165\u662f\u9996\u9009\u529e\u6cd5\u3002 \u63a8\u5bfc\u8fc7\u7a0b x \u53d6\u51fa\u4e2a\u4f4d\u6570\u5b57\uff0c\u63a8\u5165\u5230 rev \u4e2d\uff0c\u7136\u540e x \u9664\u4ee5 10 \u51cf\u5c11\u4e00\u4f4d\uff0c\u518d\u6b21\u53d6\u51fa\u4e2a\u4f4d\u6570\u5b57\uff0c\u540c\u65f6\u5c06 rev \u4e58\u4ee5 10 \u589e\u52a0\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u53d6\u51fa\u7684\u4e2a\u4f4d\u6570\uff0c\u5982\u6b64\u5f80\u590d\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5224\u65ad\u6570\u5b57\u662f\u5426\u6ea2\u51fa\u5373\u53ef\u3002 x rev 123 0 12 3 pop = 123 % 10 = 3 x = 120 / 10 = 12 rev = 0 ** 10 + 3 = 3 1 32 pop = 12 % 10 = 2 x = 10 / 10 = 1 rev = 3 ** 10 + 2 = 32 0 321 pop = 1 % 10 = 1 x = 0 / 10 = 0 rev = 32 ** 10 + 1 = 321 \u4ee3\u7801 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: MAX = 2 ** 31 - 1 MIN = -2 ** 31 def reverse(self, x: int) -> int: def reverse1(self, x: int) -> int: rev = 0 div = 10 if x > 0 else -10 # \u5982\u679c\u6570\u5b57\u4e3a\u8d1f\uff0cdiv \u4e5f\u8981\u4e3a\u8d1f max_r = (self.MAX - 7) // 10 min_r = (self.MIN + 8) // 10 while x != 0: pop = x % div # x \u53d6\u4f59\uff0cpop \u5c31\u662f\u8981\u63a8\u51fa\u7684\u6570\u5b57 rev = rev * 10 + pop # \u5c06 pop \u63a8\u5230 r \u7684\u540e\u9762 x = ( x - pop ) // 10 # \u63a8\u51fa pop \u540e x \u5e94\u8be5\u7b49\u4e8e\u7684\u6570\u5b57 # \u9632\u6b62\u6574\u6570\u6ea2\u51fa if rev > max_r or (rev == max_r and pop > 7): return 0 if rev < min_r or (rev == min_r and pop < -8): return 0 return rev \u590d\u6742\u5ea6\u5206\u6790 \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(log(x))\uff0cx \u4e2d\u5927\u7ea6\u6709 log10(x) \u4f4d\u6570\u5b57 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) \u5176\u4ed6\u8bed\u8a00 Python Go","title":"7. \u6574\u6570\u53cd\u8f6c"},{"location":"problems/7-reverse-integer/#_1","text":"","title":"\u6574\u6570\u7ffb\u8f6c"},{"location":"problems/7-reverse-integer/#_2","text":"\u96be\u5ea6\uff1a\u7b80\u5355 \u77e5\u8bc6\u70b9\uff1a\u6570\u5b66 \u5730\u5740\uff1a https://leetcode-cn.com/problems/reverse-integer/ \u7ed9\u51fa\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6574\u6570\u4e2d\u6bcf\u4f4d\u4e0a\u7684\u6570\u5b57\u8fdb\u884c\u53cd\u8f6c\u3002 \u793a\u4f8b 1: \u8f93\u5165: 123 \u8f93\u51fa: 321 \u793a\u4f8b 2: \u8f93\u5165: -123 \u8f93\u51fa: -321 \u793a\u4f8b 3: \u8f93\u5165: 120 \u8f93\u51fa: 21 \u6ce8\u610f: \u5047\u8bbe\u6211\u4eec\u7684\u73af\u5883\u53ea\u80fd\u5b58\u50a8\u5f97\u4e0b 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5219\u5176\u6570\u503c\u8303\u56f4\u4e3a [\u22122^31, 2^31 \u2212 1]\u3002\u8bf7\u6839\u636e\u8fd9\u4e2a\u5047\u8bbe\uff0c\u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u6ea2\u51fa\u90a3\u4e48\u5c31\u8fd4\u56de 0\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"problems/7-reverse-integer/#_3","text":"\u8bf4\u6765\u60ed\u6127\uff0c\u770b\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u5148\u8f6c\u6210\u5b57\u7b26\u4e32\uff0c\u7ffb\u8f6c\u5b8c\u5b57\u7b26\u4e32\u540e\uff0c\u518d\u6b21\u8f6c\u4e3a\u6574\u6570\uff0c\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u503c\u5f97\u63a8\u5bfc\u4e86\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\u3002 #!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: MAX = 2 ** 31 - 1 MIN = -2 ** 31 def reverse(self, x: int) -> int: if x == 0: return 0 y = \"\" rev = 0 a = str(x) length = len(a) for i in range(length): index = length - 1 - i if not y and a[index] == \"0\": continue y += a[index] if y[-1] == \"-\": rev = -int(y[0:-1]) if rev < self.MIN: return 0 return rev rev = int(y) if rev > self.MAX: return 0 return rev","title":"\u5b57\u7b26\u4e32\u7ffb\u8f6c"},{"location":"problems/7-reverse-integer/#_4","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(log(x))\uff0cx \u4e2d\u5927\u7ea6\u6709 log10(x) \u4f4d\u6570\u5b57 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/7-reverse-integer/#_5","text":"\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e0d\u9ad8\uff0c\u4f46\u662f\u5206\u6790\u8d77\u6765\u592a\u590d\u6742\u4e86\uff0c\u8981\u8003\u8651\u5404\u79cd\u60c5\u51b5\uff0c\u5f88\u5bb9\u6613\u51fa BUG\uff0c\u8bf4\u5230\u6570\u5b57\u7ffb\u8f6c\uff0c\u53d6\u4f59\u3001\u5f39\u51fa\u3001\u63a8\u5165\u662f\u9996\u9009\u529e\u6cd5\u3002","title":"\u5f39\u51fa\u548c\u63a8\u5165\u6570\u5b57"},{"location":"problems/7-reverse-integer/#_6","text":"x \u53d6\u51fa\u4e2a\u4f4d\u6570\u5b57\uff0c\u63a8\u5165\u5230 rev \u4e2d\uff0c\u7136\u540e x \u9664\u4ee5 10 \u51cf\u5c11\u4e00\u4f4d\uff0c\u518d\u6b21\u53d6\u51fa\u4e2a\u4f4d\u6570\u5b57\uff0c\u540c\u65f6\u5c06 rev \u4e58\u4ee5 10 \u589e\u52a0\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u53d6\u51fa\u7684\u4e2a\u4f4d\u6570\uff0c\u5982\u6b64\u5f80\u590d\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5224\u65ad\u6570\u5b57\u662f\u5426\u6ea2\u51fa\u5373\u53ef\u3002 x rev 123 0 12 3 pop = 123 % 10 = 3 x = 120 / 10 = 12 rev = 0 ** 10 + 3 = 3 1 32 pop = 12 % 10 = 2 x = 10 / 10 = 1 rev = 3 ** 10 + 2 = 32 0 321 pop = 1 % 10 = 1 x = 0 / 10 = 0 rev = 32 ** 10 + 1 = 321","title":"\u63a8\u5bfc\u8fc7\u7a0b"},{"location":"problems/7-reverse-integer/#_7","text":"#!/usr/bin/env python # -*- coding:utf-8 -*- # Author: wxnacy(wxnacy@gmail.com) class Solution: MAX = 2 ** 31 - 1 MIN = -2 ** 31 def reverse(self, x: int) -> int: def reverse1(self, x: int) -> int: rev = 0 div = 10 if x > 0 else -10 # \u5982\u679c\u6570\u5b57\u4e3a\u8d1f\uff0cdiv \u4e5f\u8981\u4e3a\u8d1f max_r = (self.MAX - 7) // 10 min_r = (self.MIN + 8) // 10 while x != 0: pop = x % div # x \u53d6\u4f59\uff0cpop \u5c31\u662f\u8981\u63a8\u51fa\u7684\u6570\u5b57 rev = rev * 10 + pop # \u5c06 pop \u63a8\u5230 r \u7684\u540e\u9762 x = ( x - pop ) // 10 # \u63a8\u51fa pop \u540e x \u5e94\u8be5\u7b49\u4e8e\u7684\u6570\u5b57 # \u9632\u6b62\u6574\u6570\u6ea2\u51fa if rev > max_r or (rev == max_r and pop > 7): return 0 if rev < min_r or (rev == min_r and pop < -8): return 0 return rev","title":"\u4ee3\u7801"},{"location":"problems/7-reverse-integer/#_8","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(log(x))\uff0cx \u4e2d\u5927\u7ea6\u6709 log10(x) \u4f4d\u6570\u5b57 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)","title":"\u590d\u6742\u5ea6\u5206\u6790"},{"location":"problems/7-reverse-integer/#_9","text":"Python Go","title":"\u5176\u4ed6\u8bed\u8a00"}]}