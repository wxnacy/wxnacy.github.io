set nocompatible				"去掉vi的一致性"
set number						"显示行号"
" 隐藏滚动条"    
set guioptions-=r				 
set guioptions-=L
set guioptions-=b
set showtabline=0				"隐藏顶部标签栏"
set guifont=Monaco:h13        	"设置字体" 
syntax on    					"开启语法高亮"
set background=dark       		"设置背景色"
set nowrap    					"设置不折行"
set fileformat=unix    			"设置以unix的格式保存文件"
set cindent        				"设置C样式的缩进格式"
set tabstop=4    				"设置table长度"
set shiftwidth=4        		"同上"
set showmatch    				"显示匹配的括号"
set scrolloff=5        			"距离顶部和底部5行"
set laststatus=2    			"命令行为两行"
set fenc=utf-8      			"文件编码"
set backspace=2					"任何情况允许使用退格键删除
set mouse=a       				"启用鼠标"
set selection=exclusive
set selectmode=mouse,key
set matchtime=5
set ignorecase        			"忽略大小写"
set incsearch
set hlsearch        			"高亮搜索项"
set noexpandtab        			"不允许扩展table"
set whichwrap+=<,>,h,l
set autoread
set cursorline        			"突出显示当前行"
set cursorcolumn        		"突出显示当前列"
set encoding=utf-8
set splitbelow
set splitright
" Enable folding 代码折叠
set foldmethod=indent
set foldlevel=99


au BufNewFile,BufRead *.py
\ set tabstop=4 |
\ set softtabstop=4 |
\ set shiftwidth=4 |
\ set textwidth=79 |
\ set expandtab |
\ set autoindent |
\ set fileformat=unix

"split navigations 切换窗口
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Enable folding with the spacebar 代码折叠快捷键
nnoremap <space> za

" 上面的第一行确保了在你完成操作之后，自动补全窗口不会消失，第二行则定义了“转到定义”的快捷方式。
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

"python with virtualenv support 发现python环境
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF

let python_highlight_all=1
syntax on

"隐藏pyc文件
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

"for nerdtree
map <C-n> :NERDTreeToggle<CR>

filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'
Bundle 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'jnurmine/Zenburn'
Plugin 'altercation/vim-colors-solarized'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'tpope/vim-fugitive'

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
